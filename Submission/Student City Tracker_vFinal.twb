<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='city_df' inline='true' name='federated.0eirobi1kmdhge1apd45a0u95vnn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='city_df' name='textscan.1830apm06cxirg180gvoo0w3o5ea'>
            <connection class='textscan' directory='C:/Users/franc/OneDrive - ucp.pt/Martin Kjærnes&apos;s files - BD/Submission' filename='city_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1830apm06cxirg180gvoo0w3o5ea' name='city_df.csv' table='[city_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='real' name='Norm Rank' ordinal='3' />
            <column datatype='real' name='Norm Cost of Living' ordinal='4' />
            <column datatype='real' name='Norm Safety' ordinal='5' />
            <column datatype='real' name='temperature' ordinal='6' />
            <column datatype='real' name='Norm Temperature' ordinal='7' />
            <column datatype='string' name='Top Universities' ordinal='8' />
            <column datatype='real' name='Final Score' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1830apm06cxirg180gvoo0w3o5ea' name='city_df.csv' table='[city_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='real' name='Norm Rank' ordinal='3' />
            <column datatype='real' name='Norm Cost of Living' ordinal='4' />
            <column datatype='real' name='Norm Safety' ordinal='5' />
            <column datatype='real' name='temperature' ordinal='6' />
            <column datatype='real' name='Norm Temperature' ordinal='7' />
            <column datatype='string' name='Top Universities' ordinal='8' />
            <column datatype='real' name='Final Score' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Norm Rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Norm Rank]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Norm Rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Norm Cost of Living</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Norm Cost of Living]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Norm Cost of Living</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Norm Safety</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Norm Safety]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Norm Safety</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Norm Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Norm Temperature]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Norm Temperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Top Universities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Top Universities]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Top Universities</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Final Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Final Score]</local-name>
            <parent-name>[city_df.csv]</parent-name>
            <remote-alias>Final Score</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[Calculation_2019582967089442816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[country] + CHAR(10) +&#10;&quot;⭐ Final Score: &quot; + &#10;LEFT(STR(ROUND([Final Score], 2)) + &quot;00&quot;, FIND(STR(ROUND([Final Score], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;📚 Rank: &quot; + LEFT(STR(ROUND([Norm Rank], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Rank], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;💸 Cost: &quot; + LEFT(STR(ROUND([Norm Cost of Living], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Cost of Living], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;🛡 Safety: &quot; + LEFT(STR(ROUND([Norm Safety], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Safety], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;🌡️ Temperature: &quot; + LEFT(STR(ROUND([Norm Temperature], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Temperature], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)  + CHAR(10) +&#10;&quot;🏛 Top Universities: &quot; + [Top Universities]' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Final Score]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Cost of Living]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Rank]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Safety]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Temperature]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='city_df.csv' datatype='table' name='[__tableau_internal_object_id__].[city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='city_df.csv' id='city_df.csv_18934A5E8D8D41BF91DC0C01D08AD28D'>
            <properties context=''>
              <relation connection='textscan.1830apm06cxirg180gvoo0w3o5ea' name='city_df.csv' table='[city_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='continent' ordinal='2' />
                  <column datatype='real' name='Norm Rank' ordinal='3' />
                  <column datatype='real' name='Norm Cost of Living' ordinal='4' />
                  <column datatype='real' name='Norm Safety' ordinal='5' />
                  <column datatype='real' name='temperature' ordinal='6' />
                  <column datatype='real' name='Norm Temperature' ordinal='7' />
                  <column datatype='string' name='Top Universities' ordinal='8' />
                  <column datatype='real' name='Final Score' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='18'>Student City Tracker</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_df' name='federated.0eirobi1kmdhge1apd45a0u95vnn' />
          </datasources>
          <datasource-dependencies datasource='federated.0eirobi1kmdhge1apd45a0u95vnn'>
            <column caption='Region' datatype='string' name='[Calculation_2019582967089442816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[country] + CHAR(10) +&#10;&quot;⭐ Final Score: &quot; + &#10;LEFT(STR(ROUND([Final Score], 2)) + &quot;00&quot;, FIND(STR(ROUND([Final Score], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;📚 Rank: &quot; + LEFT(STR(ROUND([Norm Rank], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Rank], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;💸 Cost: &quot; + LEFT(STR(ROUND([Norm Cost of Living], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Cost of Living], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;🛡 Safety: &quot; + LEFT(STR(ROUND([Norm Safety], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Safety], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)&#10; + CHAR(10) +&#10;&quot;🌡️ Temperature: &quot; + LEFT(STR(ROUND([Norm Temperature], 2)) + &quot;00&quot;, FIND(STR(ROUND([Norm Temperature], 2)) + &quot;00&quot;, &quot;.&quot;) + 2)  + CHAR(10) +&#10;&quot;🏛 Top Universities: &quot; + [Top Universities]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Final Score]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Cost of Living]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Rank]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Safety]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Temperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Top Universities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2019582967089442816]' derivation='Attribute' name='[attr:Calculation_2019582967089442816:nk]' pivot='key' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Norm Cost of Living]' derivation='None' name='[none:Norm Cost of Living:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Norm Rank]' derivation='None' name='[none:Norm Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Norm Safety]' derivation='None' name='[none:Norm Safety:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final Score]' derivation='Sum' name='[sum:Final Score:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]' included-values='in-range'>
            <min>0.497</min>
            <max>0.965254922537507</max>
          </filter>
          <filter class='quantitative' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]' included-values='in-range'>
            <min>0.65900000000000003</min>
            <max>1.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]' included-values='in-range'>
            <min>0.45700000000000002</min>
            <max>0.87540206534619935</max>
          </filter>
          <filter class='categorical' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Aachen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Aalborg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Aba&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Aberystwyth&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Adelaide&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Akron&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Albany&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Albemarle&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ames&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Amsterdam&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ankara&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ann Arbor&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Antony&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Antwerp&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Arak&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Arese&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Arlington&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Asti&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Athens&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Atlanta&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Auckland&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Augsburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Baden&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Baltimore&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bangalore&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bar&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Barcelona&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bari&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Basel&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bath&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bayreuth&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bedford&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Belfast&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Belo Horizonte&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bergen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Berlin&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bern&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bielefeld&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bloomington&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bochum&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bologna&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bonn&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Boulder&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bowling Green&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bra&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bradford&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Braga&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bremen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Brighton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Brisbane&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Bristol&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Brno&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Brunswick&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Brussels&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Budapest&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Buenos Aires&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Burlington&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Calgary&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Canberra&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Cape Town&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Carolina&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Cascavel&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Champaign&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Chandigarh&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Charleston&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Chennai&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Christchurch&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Cincinnati&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Clermont-Ferrand&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Cleveland&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Colchester&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;College Station&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Columbia&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Columbus&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Concord&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Corvallis&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Dayton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Debrecen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Delhi&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Denton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Detroit&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Douglas&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Dresden&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Dublin&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Dundee&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Durham&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Eagan&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ede&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Edinburgh&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Edmonton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;El Paso&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Elmont&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Enschede&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Espoo&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Essen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Eugene&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Exeter&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Fairbanks&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Flagstaff&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Fort Lauderdale&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Frankfurt&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Fribourg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Gainesville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Galway&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Gent&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;George&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Glasgow&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Granada&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Graz&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Greensboro&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Greenville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Greifswald&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Groningen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hagen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Halifax&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Halle&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hamburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hamilton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hannover&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hattiesburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Helsinki&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ho&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hobart&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Honolulu&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Hyderabad&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ibb&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ica&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Innsbruck&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Iowa City&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Itu&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Jackson&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Jena&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Johannesburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Jos&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kampala&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kansas City&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Karlsruhe&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kent&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kharagpur&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kiel&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kingston&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Knoxville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kolkata&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kota&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Kuala Lumpur&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lae&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lafayette&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lancaster&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lansing&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Las Cruces&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Laval&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Le Bourget&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Leicester&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Leiden&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Leipzig&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lethbridge&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lexington&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lima&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lincoln&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Little Rock&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ljubljana&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Logan&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;London&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Louisville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lowell&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lubbock&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Lyon&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Maastricht&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Macerata&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Madrid&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Magdeburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Male&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Manchester&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Manhattan&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Mannheim&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Maribor&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Marseille&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Melbourne&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Memphis&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Miami&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Milan&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Milwaukee&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Missoula&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Montgomery&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Moscow&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Mumbai&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Munster&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Namur&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Nanyang&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Nashville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Natal&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Newark&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Newcastle&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Nice&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Nijmegen&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Norfolk&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Norman&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Nottingham&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oakland&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Odense&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oklahoma City&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oldenburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Omsk&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oral&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Orlando&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Osaka&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oslo&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ottawa&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oulu&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Oxford&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Paris&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Pau&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Perth&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Peterborough&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Petrolina&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Philadelphia&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Plymouth&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Portland&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Porto&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Portsmouth&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Preston&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Pretoria&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Providence&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Queens&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Reading&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Recife&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Regina&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Reno&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Rio de Janeiro&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Riverside&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Rochester&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Rome&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Rotterdam&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Sagamihara&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Salamanca&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Salem&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Salt Lake City&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Salvador&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Salzburg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;San Diego&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Santiago&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Saskatoon&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Sheffield&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Somerville&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Southampton&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;St. Catharines&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Stirling&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Stockholm&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Strasbourg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Stuttgart&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Surrey&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Sydney&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Szeged&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tallahassee&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tampa&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tarragona&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tempe&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tete&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tokat&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tokyo&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Toledo&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Toronto&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tours&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Trondheim&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Tucson&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Turku&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Ulm&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Utrecht&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Valencia&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Vancouver&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Varanasi&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Victoria&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Vienna&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Vigo&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Vilnius&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Waco&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Waltham&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Webster&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Windsor&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Winnipeg&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Winterthur&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Wollongong&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Worcester&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]' included-values='in-range'>
            <min>18.100000000000001</min>
            <max>30.600000000000001</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]</column>
            <column>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]' scope='cols' value='City Score' />
            <encoding attr='space' class='0' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]' field-type='quantitative' max='0.78457581500712559' min='0.29999999999999999' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]' value='56' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]' value='🛡️ Set minimum Safety'>
              <formatted-text>
                <run fontname='Tableau Bold'>🛡️ Set minimum Safety</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]' value='🎓 Set minimum Uni Rank'>
              <formatted-text>
                <run fontname='Tableau Bold'>🎓 Set minimum Uni Rank</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]' value='💰Set Cost of Living'>
              <formatted-text>
                <run fontname='Tableau Bold'>💰Set Cost of Living</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]' value='🌡️ Set Temperature (°C) '>
              <formatted-text>
                <run fontname='Tableau Bold'>🌡️ Set Temperature (°C) </run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]' value='🏳️ Country'>
              <formatted-text>
                <run fontname='Tableau Bold'>🏳️ Country</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]' value='🌍 Continent'>
              <formatted-text>
                <run fontname='Tableau Bold'>🌍 Continent</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]' />
              <tooltip column='[federated.0eirobi1kmdhge1apd45a0u95vnn].[attr:Calculation_2019582967089442816:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]</rows>
        <cols>[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]</cols>
      </table>
      <simple-id uuid='{83D6DA5E-7048-4A89-BBF2-23BBA12AC765}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='10' is-scaled='1' param='C:/Users/franc/OneDrive - ucp.pt/Martin Kjærnes&apos;s files - BD/Francisco/Presentation.png' type-v2='bitmap' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='33' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' is-scaled='1' param='C:/Users/franc/OneDrive - ucp.pt/Martin Kjærnes&apos;s files - BD/Francisco/Presentation.png' type-v2='bitmap' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{281C6C7A-A9AE-4596-BDC4-BB7E3B002F18}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Final Prototype'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='city_df' name='federated.0eirobi1kmdhge1apd45a0u95vnn' />
      </datasources>
      <datasource-dependencies datasource='federated.0eirobi1kmdhge1apd45a0u95vnn'>
        <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Cost of Living]' role='measure' type='quantitative' />
        <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Rank]' role='measure' type='quantitative' />
        <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Norm Safety]' role='measure' type='quantitative' />
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Norm Cost of Living]' derivation='None' name='[none:Norm Cost of Living:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Norm Rank]' derivation='None' name='[none:Norm Rank:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Norm Safety]' derivation='None' name='[none:Norm Safety:qk]' pivot='key' type='quantitative' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
        <column datatype='real' name='[temperature]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='99500' id='3' name='Sheet 1' w='75300' x='100' y='875' />
        <zone h='7625' id='4' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77200' y='10250' />
        <zone h='7625' id='5' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77300' y='18750' />
        <zone h='7625' id='6' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77800' y='27375' />
        <zone h='7375' id='7' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77300' y='35750' />
        <zone h='6000' id='8' mode='checkdropdown' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]' type-v2='filter' values='cascading' w='16000' x='77600' y='43875' />
        <zone h='5500' id='9' mode='checkdropdown' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]' type-v2='filter' w='16000' x='77600' y='52000' />
        <zone forceUpdate='true' h='3750' id='10' type-v2='text' w='10000' x='77400' y='5000'>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='14'>Filters</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='4' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77200' y='10250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='5' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77300' y='18750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='6' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77800' y='27375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='7' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='77300' y='35750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='8' mode='checkdropdown' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]' type-v2='filter' values='cascading' w='16000' x='77600' y='43875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='9' mode='checkdropdown' name='Sheet 1' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]' type-v2='filter' w='16000' x='77600' y='52000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='99500' id='3' is-fixed='true' name='Sheet 1' w='75300' x='100' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3750' id='10' type-v2='text' w='10000' x='77400' y='5000'>
                  <formatted-text>
                    <run fontname='Tableau Bold' fontsize='14'>Filters</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{693762CA-72FA-4700-A2E5-CA47322E4287}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{2588EE54-D016-45DD-A593-9143C55F17BB}' />
    </window>
    <window class='dashboard' name='Final Prototype'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{870EB2C5-6255-4E0D-B2A5-E99CA8A1CA30}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]' type='filter' values='cascading' />
            <card mode='checkdropdown' param='[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0eirobi1kmdhge1apd45a0u95vnn].[sum:Final Score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Calculation_2019582967089442816:nk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Cost of Living:qk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Rank:qk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Safety:qk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:Norm Temperature:qk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:city:nk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:continent:nk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:country:nk]</field>
            <field>[federated.0eirobi1kmdhge1apd45a0u95vnn].[none:temperature:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B402FA6A-9BE1-4C2B-9690-8382292DCD04}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 3' width='384'>
      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
      5ORkbDYbH3zwAb1796Zv374cOHCAFStWMGbMGOLi4li3bh2HDh1i1KhRdO/e3ew26d69O35+
      fkRERLBo0SKaN29OaGgotWrVoqSkhGuuuYZTp06xceNGUlJSiImJMYMiPj6e3NxcQkNDOXny
      JN27d+fll1+mZ8+eJCQkoOs6fn5+JCcns2zZMlJSUggICCAwMJC5c+cSHx9P/fr1cTqdtG/f
      noULF9K+fXvWr1/P0KFDqV27NlBxRn7ixAlWrVrFvffeS1xcHKtWrSIqKopGjRpRXl7O8uXL
      6d+/PwMGDGDr1q3s27ePbt260blzZ/79739jsVhISEggKSmJunXrcvz4cZYuXcott9xC3bp1
      yc/Pp1mzZuTl5dG4cWOsVis1a9bkww8/NPdJVFQUhYWFDBs2zGzUevToQWlpKU2bNiUvL4/m
      zZsDmGf3V111lfm34/F46NOnD2+++SYRERE0bNiQ4OBgoqKiaNiwIV6vl/bt21NUVERiYiJK
      KdauXUtCQgItW7YkMjKSuXPnkpSURIsWLczvx2JjY+nVqxfbt283u15WrVpFRkYG2dnZjB49
      muLiYurVq0eTJk346quv2LFjB126dMFisdCoUSNatmzJokWLOHfuHD169KCsrJ88ttQAACAA
      SURBVIwmTZrQvHlzli1bxokTJ7jmmmvweDw0bdqU3NxcmjZtSv369XnnnXcIDAykR48eQMV3
      bwkJCdSrV48FCxZw9dVX07p1a95//306dep02durPzqfHBHsww8/ZP/+/VitVkaPHk1MTEy1
      1GP27NkMHDiQiIiIaln/70F2djavv/46NpuN+Ph4Ro0a9T+XtW3bNlauXMmTTz5ZpRtR/Dyv
      vPIKDzzwwB+2ffAlPhkAQggh5EEwIYTwWdUWAAUFBZe8N/tSKr8/uJSfc6/7T2UYxg+u88iR
      I+YdFJdLbm5ulYd1fi632/2z9+2Pyc3Npbi4+LKWKYSoXtUWADNnzuSxxx4zG2y3223eNVDZ
      0BQVFWEYBmfPnsXtdlNcXMzUqVPJzMw0H3DJyckxH4pp06YNTqeTJ5980ry7ITMzs8oDW5W3
      Uqanp2MYBpmZmeaDMZV31VTWKT8/n6ysLP71r38BFf3R5zeC6enpPPXUU3g8HoqLi8nIyAAq
      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
      oLe3l89+9rPccsst/OVf/uWLLr7uu+++o/7ty1/+Mnv37gXgc5/7XOPxO++8c9JxP//5zydl
      ZTezc+fOExn6f2hMFBCwdu1afvjDHzI+Ps6ZZ57JwMAA2WyWn/3sZxw4cIDZs2fjui6bN2+m
      WCzS09PDzTffzEc+8hEefPBB7rjjDj796U/zk5/8hFqtxtlnn80999zD2rVrueKKK07322tp
      RkdHcV2XP/7jPyabzfKVr3yFMAx55zvfyR133MHZZ5/NN7/5TeI45rLLLuP666/n3HPPxfM8
      Lr30UtavX8/73vdCO7nhpeX73/8+H//4x1myZAnPPPMMvb293HjjjURRxCc/+UluueUWfN/n
      kksu4brrrsO2bd7whjewb98+br75ZqIo4uqrr+bRRx/lqquuApi0gKvVatxwww1cc8013HTT
      TXR1dTE+Ps4Xv/hFXNflXe96F8899xx79uxh0aJFLF68+HRdipcVswMAZs6cycDAALt27eJt
      b3sbt912G+vWreP222+nWq3y9NNPY9s28+fP5+GHH+ass87iTW96E+3t7Vx22WVceOGFbNu2
      jXvuuYdyucxTTz1FV1eXmfxfAVx22WWcf/75XH/99WzcuJHu7m4cx2Hz5s1ccMEFrFixgief
      fJLx8XF27tzJBRdcwLvf/W76+vq47777WLt27el+Cy1BrVYjn88D0NHRwfr167nyyiu58sor
      uf/++5NsZd+nWCxy3nnn8frXvx5Idngf/OAHed3rXse+fft47WtfyxlnnPGC8/f19XHGGWfw
      yCOPNDKvgyBg3bp1XHPNNWzZsoXdu3czf/78RlG+VsAIAIkDpauri1KpxBlnnMGtt97KmWee
      yerVq1m3bh0zZ87kgQceYP78+Y26Ldu3b6dSqUxK3Fm1ahXr1q2js7PziDZnw8vPbbfdxu7d
      u2lvb2dgYIB9+/YxY8aMRo2ezs5OVqxYwcqVKykUCti2zaZNm3jzm9/MnXfeyapVq073W2gJ
      LrvsMr7xjW9wzz338NWvfpUVK1awfv16HnzwQZYtW4bruixZsoRnn30WpRTbt28HYPny5dx7
      77089thjLF26tGH/BxgeHua+++5j69atxHHc2O1ddNFFjZpNqf8vzU7ftGkTmUzmdF2Glx99
      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
    </thumbnail>
    <thumbnail height='384' name='Final Prototype' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXRcd2H28e/s2i1rsyRL3i15TeLIaxJnIYSkkAYCYQtrAjhleaHQt0Db
      k7IUaOEALUuhcSl9CRy2QCklUAgJJCSO7djyLtmjXdZubTMaaaRZ7/uHbCWOl0ixRnPt3/M5
      h4M1c2fuMze699HM/O79OSzLshAREeM40x1ARETSQwUgImIoFYCIiKFUACIihlIBiIgYSgUg
      ImIoFYCIiKFUACIihlIBiIgYKuUF0N1Sz86dO2npHk71qi66/tr6lrSsfyZ+9cj3+cVvn0p3
      DBExhBMgOjbMlz/3d7zy5u1s2rSZu9/4Vn7wyycAiA6188ADD/Dzx3a/rBX0tE4egFt7ApcU
      9DN//QBf+fcfXfD+0eFevvjpv+HWm7ezafNW3vqu99IzEptaf219KwC7H/s5DzzwAO1D0Rms
      fYLXbt/Ixo3n/m9Xfe8lva4XevRn3+e/VQAiMkfcADu/+g/85NfP8dq776Yw10fj8WPs3neA
      t7/2VpLRMWpra1l7w11pDVp/uJZ89/Lz3peIBPnwjvdypH2AV95xJ0vKCzh+6DkC4QQ1t97D
      /v33TC071NdFbW0tY9HkDNbu5i337SAUh6d++wv83RPcf/9bcQOVxTmX9sJERNLFsizrgbfc
      bt3xxvdZkXjSOmN8fNwa76mzampqzvrfQ488btU986hVU1NjPfpMnWVZlvXIQ1+0ampqrJbh
      ycf+6Tc/se6841Zr89brrDe/6Q1WTU2N9fj+FsuyLKtu35PW2+55rVVTs9F6/Vvvsw6caLcs
      y7KeefRhq6amxvriv3zLevPdd1obN2+1Pvv171mWZVlvuu3sDB/5zNesF3riZ9+xampqrK9/
      /1HrxVr2P27V1NRYjzy+33r04a+d83qONTRZN2yusT762W+efkTC+os3327d876Pn/NclmVZ
      n/nIO62aG+6yxl9w20Nf/KRVU3Ob1dBWZ73hztusrz38qDXU2Wh98H3vtq7btsXauGmL9a4d
      H7ZaewOWZVlWMjZufedr/2Tddst2a9OWrdZHP/3PlmVZ1o433Wa98yOfsSzLsn70rc9bm7bd
      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
      eeQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
